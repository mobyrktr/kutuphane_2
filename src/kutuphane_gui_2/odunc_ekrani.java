/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kutuphane_gui_2;

import java.awt.Color;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author mobyrktr
 */
public class odunc_ekrani extends javax.swing.JFrame {
    DefaultTableModel model;
    SimpleDateFormat myFormat = new SimpleDateFormat("dd/MM/yyyy");
    
    Kitap_Islemleri islemler = new Kitap_Islemleri();
    String tckn;

    
    public void showBooks()
    {
        model.setRowCount(0);
        
        ArrayList<Kitap> kitaplar =  islemler.showAllBooks();
        
        if(kitaplar != null)
        {
            for(Kitap kitap: kitaplar)
            {
                Object[] eklenecek = {kitap.getKitap_id(), kitap.getKitap_adi(), kitap.getYazar_adi(), kitap.getYayinevi(), kitap.getIsbn(), kitap.getKitap_adet()};
                model.addRow(eklenecek);
            }
        }
    }
    
    public void dinamikAra(String ara)
    {
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(model);
        tbl_kitap.setRowSorter(tr);
        switch (cb_arama.getSelectedIndex()) {
            case 0:
                tr.setRowFilter(RowFilter.regexFilter(ara, 1));
                break;
            case 1:
                tr.setRowFilter(RowFilter.regexFilter(ara, 2));
                break;
            case 2:
                tr.setRowFilter(RowFilter.regexFilter(ara, 3));
                break;
            case 3:
                tr.setRowFilter(RowFilter.regexFilter(ara, 4));
                break;
            default:
                break;
        }
        
    }
    public odunc_ekrani()
    {
        initComponents();
        model = (DefaultTableModel)tbl_kitap.getModel();
        showBooks();
    }
    
    public odunc_ekrani(String tckn) {
        initComponents();
        this.tckn = tckn;
        model = (DefaultTableModel)tbl_kitap.getModel();
        showBooks();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cb_arama = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_kitap = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        tf_arama = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btn_odunc = new javax.swing.JButton();
        lbl_mesaj = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ödünç Alma Ekranı");
        setLocation(new java.awt.Point(500, 200));

        cb_arama.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kitap Adı", "Yazar Adı", "Yayınevi", "ISBN" }));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/go_back.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        tbl_kitap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kitap ID", "Kitap Adı", "Yazar Adı", "Yayınevi", "ISBN", "Kitap Adet"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_kitap);

        jLabel1.setText("Arama Türü:");

        tf_arama.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_aramaKeyReleased(evt);
            }
        });

        jLabel2.setText("Arama:");

        btn_odunc.setText("Ödünç Al");
        btn_odunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_oduncActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cb_arama, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(94, 94, 94)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_arama, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(283, 283, 283)
                        .addComponent(btn_odunc, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lbl_mesaj, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(165, 165, 165))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf_arama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(cb_arama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(lbl_mesaj, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_odunc)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        user_screen u = new user_screen(tckn);
        this.setVisible(false);
        u.setVisible(true);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void tf_aramaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_aramaKeyReleased
        String ara = tf_arama.getText();
        dinamikAra(ara);
    }//GEN-LAST:event_tf_aramaKeyReleased

    private void btn_oduncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_oduncActionPerformed
        Odunc_Islemleri o = new Odunc_Islemleri();
        LocalDate today = LocalDate.now(ZoneId.of("GMT+03:00"));
        int secilmis_satir = tbl_kitap.getSelectedRow();
        int kitap_id = 0;
        
        if(secilmis_satir == -1)
        {
            if(tbl_kitap.getRowCount() == 0)
            {
                JOptionPane.showMessageDialog(this, "Kitap listesi boş.");
            }
            
            else
            {
                JOptionPane.showMessageDialog(this, "Tablodan bir ürün seçmelisiniz.");
            }
        }
        
        else
        {
            try {
                kitap_id = Integer.valueOf(model.getValueAt(secilmis_satir, 0).toString());
                String kitap_adi = model.getValueAt(secilmis_satir, 1).toString();
                boolean alinmisMi;
                alinmisMi = o.kitapAlinmisMi(tckn, kitap_id);
                
                if(alinmisMi)
                {
                    lbl_mesaj.setForeground(Color.red);
                    lbl_mesaj.setText(kitap_adi + " adlı kitabı zaten ödünç almışsınız.");
                }
                else
                {
                    String tarih = today.format(DateTimeFormatter.ofPattern("d/MM/uuuu"));
                    int olduMu = o.oduncAl(kitap_id, tckn, tarih);
                    
                    if(olduMu != -1)
                    {
                        lbl_mesaj.setForeground(Color.green);
                        lbl_mesaj.setText(kitap_adi + " başarıyla ödünç verildi.");
                        showBooks();
                    }
                    
                    else
                    {
                        lbl_mesaj.setForeground(Color.red);
                        lbl_mesaj.setText(kitap_adi + " adlı kitap hiç kalmadığından ödünç verilemez.");
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(odunc_ekrani.class.getName()).log(Level.SEVERE, null, ex);
            }
        }    
    }//GEN-LAST:event_btn_oduncActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(odunc_ekrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(odunc_ekrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(odunc_ekrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(odunc_ekrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new odunc_ekrani().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_odunc;
    private javax.swing.JComboBox<String> cb_arama;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_mesaj;
    private javax.swing.JTable tbl_kitap;
    private javax.swing.JTextField tf_arama;
    // End of variables declaration//GEN-END:variables
}
